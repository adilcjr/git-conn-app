{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/services/git-connector.service.ts","webpack:///./src/app/services/repository.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;;;;;;;;;;;;ACZyC;AACc;AAEvD,IAAM,MAAM,GAAW,EAAE,CAAC;AAM1B;IAAA;IAAgC,CAAC;IAApB,gBAAgB;QAJ5B,8DAAQ,CAAC;YACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;YACvC,OAAO,EAAE,CAAC,4DAAY,CAAC;SACxB,CAAC;OACW,gBAAgB,CAAI;IAAD,uBAAC;CAAA;AAAJ;;;;;;;;;;;;ACT7B,+DAA+D,+H;;;;;;;;;;;ACA/D,wGAAwG,yWAAyW,kxBAAkxB,OAAO,2MAA2M,aAAa,0BAA0B,oBAAoB,kNAAkN,4DAA4D,yBAAyB,wpBAAwpB,aAAa,mGAAmG,oBAAoB,qDAAqD,iBAAiB,KAAK,iBAAiB,oNAAoN,0DAA0D,yBAAyB,8DAA8D,kIAAkI,0DAA0D,uBAAuB,ygB;;;;;;;;;;;;;;;;;;;;;;;;;;ACA7pG;AAC6B;AAEL;AAOlE;IAQE,sBACU,QAA6B,EAC7B,IAAuB;QADvB,aAAQ,GAAR,QAAQ,CAAqB;QAC7B,SAAI,GAAJ,IAAI,CAAmB;QANjC,YAAO,GAAG,KAAK,CAAC;QAChB,aAAQ,GAAG,EAAE,CAAC;QACd,UAAK,GAAG,EAAE,CAAC;IAIyB,CAAC;IAErC,qDAAqD;IACrD,+BAAQ,GAAR;QACE,IAAI,CAAC,SAAS,EAAE,CAAC;IACnB,CAAC;IAED,+BAAQ,GAAR,UAAS,QAAa;QAAtB,iBAmBC;QAjBC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAChB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QAEpB,IAAI,CAAC,QAAQ,CAAC,6BAA6B,CAAC,QAAQ,CAAC,QAAQ,CAAC;aAC3D,SAAS,CACR,UAAC,QAAQ;YACP,KAAI,CAAC,OAAO,GAAG,QAAQ,CAAC,KAAK,CAAC;QAChC,CAAC,EACD,UAAC,KAAK;YACJ,KAAI,CAAC,KAAK,GAAG,KAAK,CAAC,OAAO,CAAC;YAC3B,KAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACvB,CAAC,EACD;YACE,KAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACvB,CAAC,CACF,CAAC;IACN,CAAC;IAED,gCAAS,GAAT;QAAA,iBAUC;QARC,IAAI,CAAC,IAAI,CAAC,eAAe,EAAE,CAAC,SAAS,CACnC,UAAC,QAAQ;YACP,KAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QAC3B,CAAC,EACD,UAAC,KAAK;YACJ,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;QAC7B,CAAC,CACF,CAAC;IACJ,CAAC;IAED,+BAAQ,GAAR,UAAS,OAAa;QAAtB,iBAWC;QATC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,SAAS,CACjC,UAAC,QAAQ;YACP,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;YACtB,KAAI,CAAC,SAAS,EAAE,CAAC;QACnB,CAAC,EACD,UAAC,KAAK;YACJ,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;QAC7B,CAAC,CACF,CAAC;IACJ,CAAC;IAED,iCAAU,GAAV,UAAW,EAAU;QAArB,iBAUC;QATC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,SAAS,CAC5B,UAAC,QAAQ;YACP,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;YACtB,KAAI,CAAC,SAAS,EAAE,CAAC;QACnB,CAAC,EACD,UAAC,KAAK;YACJ,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;QAC7B,CAAC,CACF,CAAC;IACJ,CAAC;IAzEU,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;YACpB,yFAAmC;;SAEpC,CAAC;yCAUoB,mFAAmB;YACvB,8EAAiB;OAVtB,YAAY,CA0ExB;IAAD,mBAAC;CAAA;AA1EwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACViC;AACF;AACX;AACJ;AAGe;AACT;AACwB;AAevE;IAAA;IAAyB,CAAC;IAAb,SAAS;QAbrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,2DAAY;aACb;YACD,OAAO,EAAE;gBACP,uEAAa;gBACb,oEAAgB;gBAChB,0DAAW;gBACX,qEAAgB;aACjB;YACD,SAAS,EAAE,CAAC,mFAAmB,CAAC;YAChC,SAAS,EAAE,CAAC,2DAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;;;;;;;;;;;;;;;ACvBqB;AACmB;AAO9D;IAIE,6BAAoB,KAAiB;QAAjB,UAAK,GAAL,KAAK,CAAY;QAFrC,gBAAW,GAAI,wBAAwB,CAAC;IAEC,CAAC;IAEnC,kDAAoB,GAA3B,UAA4B,KAAa,EAAE,UAAkB;QAC3D,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAM,IAAI,CAAC,WAAW,GAAG,QAAQ,GAAG,KAAK,GAAG,GAAG,GAAG,UAAU,CAAC,CAAC;IACrF,CAAC;IAEM,2DAA6B,GAApC,UAAqC,QAAgB;QAEnD,IAAM,MAAM,GAAG,IAAI,+DAAU,EAAE;aAC5B,MAAM,CAAC,GAAG,EAAE,WAAW,GAAG,QAAQ,CAAC;aACnC,MAAM,CAAC,MAAM,EAAE,OAAO,CAAC;aACvB,MAAM,CAAC,OAAO,EAAE,MAAM,CAAC;aACvB,MAAM,CAAC,UAAU,EAAE,GAAG,CAAC,CAAC;QAE3B,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAM,IAAI,CAAC,WAAW,GAAG,sBAAsB,EAAE,EAAC,MAAM,UAAC,CAAC,CAAC;IAClF,CAAC;IAnBU,mBAAmB;QAH/B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAK2B,+DAAU;OAJ1B,mBAAmB,CAqB/B;IAAD,0BAAC;CAAA;AArB+B;;;;;;;;;;;;;;;;;;;;;;;;;;ACRW;AACoB;AAO/D;IAUE,2BAAoB,KAAiB;QAAjB,UAAK,GAAL,KAAK,CAAY;QAR7B,SAAI,GAAG,sDAAsD,CAAC;QAE9D,iBAAY,GAAG;YACrB,OAAO,EAAE,IAAI,gEAAW,CAAC;gBACvB,cAAc,EAAG,kBAAkB;aACpC,CAAC;SACH,CAAC;IAEuC,CAAC;IAEnC,2CAAe,GAAtB;QAEE,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAM,IAAI,CAAC,IAAI,CAAC,CAAC;IACxC,CAAC;IAEM,yCAAa,GAApB,UAAqB,EAAU;QAC7B,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC,CAAC;IACxC,CAAC;IAEM,kCAAM,GAAb,UAAc,IAAU;QAEtB,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC;QACf,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;IAC1C,CAAC;IAEM,kCAAM,GAAb,UAAc,EAAU;QAEtB,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,GAAG,EAAE,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC;IAC9D,CAAC;IA9BU,iBAAiB;QAH7B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAW2B,+DAAU;OAV1B,iBAAiB,CA+B7B;IAAD,wBAAC;CAAA;AA/B6B;;;;;;;;;;;;;ACR9B;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAC4B;AAE9B;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,KAAK,CAAC,GAAG,CAAC,EAAlB,CAAkB,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"container\\\">\\r\\n  <h3>Git Best Repos Finder</h3>\\r\\n  <hr>\\r\\n  <p>&nbsp;</p>\\r\\n\\r\\n  <section class=\\\"row\\\">\\r\\n\\r\\n    <div class=\\\"col-md-5 col-md-offset-1\\\">\\r\\n      <h5>Find Best Repos By Language</h5>\\r\\n      <br>\\r\\n      <form #repoForm=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit(repoForm.value)\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"language\\\">Choose a programming language: </label>\\r\\n          &nbsp;\\r\\n          <select name=\\\"language\\\" [(ngModel)]=\\\"language\\\">\\r\\n            <option value=\\\"python\\\"> Python </option>\\r\\n            <option value=\\\"java\\\"> Java </option>\\r\\n            <option value=\\\"typescript\\\"> TypeScript </option>\\r\\n            <option value=\\\"ruby\\\"> Ruby </option>\\r\\n            <option value=\\\"php\\\"> PHP </option>\\r\\n          </select>\\r\\n        </div>\\r\\n        <div class=\\\"text-right\\\">\\r\\n          <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\"><i class=\\\"fab fa-searchengin\\\"></i> Search </button>\\r\\n        </div>\\r\\n      </form>\\r\\n      <br>\\r\\n      <div [hidden]=\\\"!loading\\\" class=\\\"text-center\\\">Loading...</div>\\r\\n      <div [hidden]=\\\"!error\\\" class=\\\"text-center alert alert-warning\\\">\\r\\n        <strong>Warning!</strong> {{error}}\\r\\n      </div>\\r\\n      <div [hidden]=\\\"repoGit==null\\\">\\r\\n        <br>\\r\\n        <ng-container *ngFor=\\\"let repo of repoGit\\\">\\r\\n\\r\\n          <div class=\\\"alert alert-info\\\">\\r\\n            <h5>{{ repo.name }}</h5>\\r\\n            <p>{{ repo.description }}</p>\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"col-md-6\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-primary\\\">\\r\\n                    <i class=\\\"fas fa-star\\\"></i>&nbsp;\\r\\n                    <span class=\\\"badge badge-light\\\">{{ repo.stargazers_count }}</span>\\r\\n                </button>\\r\\n              </div>\\r\\n              <div class=\\\"col-md-6\\\">\\r\\n                <div class=\\\"text-right\\\">\\r\\n                  <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"saveRepo(repo)\\\">\\r\\n                    <i class=\\\"fas fa-save\\\"></i>\\r\\n                  </button>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </ng-container>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"col-md-6\\\">\\r\\n      <ng-container *ngFor=\\\"let repo of repoData\\\">\\r\\n        <div class=\\\"card\\\">\\r\\n          <h5 class=\\\"card-header\\\">\\r\\n              {{ repo.name }}\\r\\n          </h5>\\r\\n          <div class=\\\"card-body\\\">\\r\\n            <p class=\\\"card-text\\\">{{ repo.description }}</p>\\r\\n            <p><a target=\\\"_blank\\\" href=\\\"{{ repo.html_url }}\\\">{{ repo.html_url }}</a></p>\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"col-md-6\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-primary\\\">\\r\\n                  <i class=\\\"fas fa-star\\\"></i>&nbsp;\\r\\n                  <span class=\\\"badge badge-light\\\">{{ repo.stargazers_count }}</span>\\r\\n                </button>\\r\\n                &nbsp;\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-primary\\\">\\r\\n                  <i class=\\\"fas fa-glasses\\\"></i>&nbsp;\\r\\n                  <span class=\\\"badge badge-light\\\">{{ repo.watchers_count }}</span>\\r\\n                </button>\\r\\n              </div>\\r\\n              <div class=\\\"col-md-6\\\">\\r\\n                <div class=\\\"text-right\\\">\\r\\n                  <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"deleteRepo(repo.id)\\\">\\r\\n                    <i class=\\\"fas fa-trash-alt\\\"></i>\\r\\n                  </button>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </ng-container>\\r\\n    </div>\\r\\n  </section>\\r\\n</div>\\r\\n\"","import { Component } from '@angular/core';\r\nimport { GitConnectorService } from './services/git-connector.service';\r\nimport { Repo } from '../assets/repo';\r\nimport { RepositoryService } from './services/repository.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n\r\n  repoGit: Repo[];\r\n  repoData: Repo[];\r\n  loading = false;\r\n  language = '';\r\n  error = '';\r\n\r\n  constructor(\r\n    private _service: GitConnectorService,\r\n    private _api: RepositoryService) {}\r\n\r\n  // tslint:disable-next-line: use-life-cycle-interface\r\n  ngOnInit(): void {\r\n    this.loadRepos();\r\n  }\r\n\r\n  onSubmit(repoForm: any) {\r\n\r\n    this.loading = true;\r\n    this.error = '';\r\n    this.repoGit = null;\r\n\r\n    this._service.getBestRepositoriesByLanguage(repoForm.language)\r\n      .subscribe(\r\n        (response) => {\r\n          this.repoGit = response.items;\r\n        },\r\n        (error) => {\r\n          this.error = error.message;\r\n          this.loading = false;\r\n        },\r\n        () => {\r\n          this.loading = false;\r\n        }\r\n      );\r\n  }\r\n\r\n  loadRepos() {\r\n\r\n    this._api.getRepositories().subscribe(\r\n      (response) => {\r\n        this.repoData = response;\r\n      },\r\n      (error) => {\r\n        console.log(error.message);\r\n      }\r\n    );\r\n  }\r\n\r\n  saveRepo(newRepo: Repo) {\r\n\r\n    this._api.create(newRepo).subscribe(\r\n      (response) => {\r\n        console.log(response);\r\n        this.loadRepos();\r\n      },\r\n      (error) => {\r\n        console.log(error.message);\r\n      }\r\n    );\r\n  }\r\n\r\n  deleteRepo(id: number) {\r\n    this._api.delete(id).subscribe(\r\n      (response) => {\r\n        console.log(response);\r\n        this.loadRepos();\r\n      },\r\n      (error) => {\r\n        console.log(error.message);\r\n      }\r\n    );\r\n  }\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { NgModule } from '@angular/core';\r\n\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { GitConnectorService } from './services/git-connector.service';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    FormsModule,\r\n    HttpClientModule\r\n  ],\r\n  providers: [GitConnectorService],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Repo } from '../../assets/repo';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class GitConnectorService {\r\n\r\n  _defaultUrl =  'https://api.github.com';\r\n\r\n  constructor(private _http: HttpClient) { }\r\n\r\n  public findRepositoryByName(login: string, repository: string): any {\r\n    return this._http.get<any>(this._defaultUrl + 'repos/' + login + '/' + repository);\r\n  }\r\n\r\n  public getBestRepositoriesByLanguage(language: string): Observable<any> {\r\n\r\n    const params = new HttpParams()\r\n      .append('q', 'language:' + language)\r\n      .append('sort', 'stars')\r\n      .append('order', 'desc')\r\n      .append('per_page', '5');\r\n\r\n    return this._http.get<any>(this._defaultUrl + '/search/repositories', {params});\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Repo } from '../../assets/repo';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RepositoryService {\n\n  private _url = 'https://git-conn-api.herokuapp.com/api/repositories/';\n\n  private _httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type':  'application/json'\n    })\n  };\n\n  constructor(private _http: HttpClient) { }\n\n  public getRepositories(): Observable<any> {\n\n    return this._http.get<any>(this._url);\n  }\n\n  public getRepository(id: number): Observable<any> {\n    return this._http.get(this._url + id);\n  }\n\n  public create(repo: Repo): Observable<any> {\n\n    repo.id = null;\n    return this._http.post(this._url, repo);\n  }\n\n  public delete(id: number): Observable<any> {\n\n    return this._http.delete(this._url + id, this._httpOptions);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}